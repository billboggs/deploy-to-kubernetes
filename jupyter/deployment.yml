apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jupyter
  annotations:
    description: Jupyter - Web Application for IPython Notebooks Data Science and Analysis
    runtime: python3
  labels:
    app: jupyter
    purpose: analysis
    layer: web
    users: data-scientists
    auth: basic
    messaging: redis
    cache: redis
    pubsub: publisher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter
      datascience: enabled
  template:
    metadata:
      labels:
        app: jupyter
        purpose: analysis
        layer: web
        users: data-scientists
        auth: basic
        messaging: redis
        cache: redis
        pubsub: publisher
        datascience: enabled
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: datascience
                operator: In
                values:
                - enabled
      hostname: jupyter
      restartPolicy: Always
      containers:
      - image: jayjohnson/antinex-jupyter:latest
        name: jupyter
        ports:
        - containerPort: 8888
        - containerPort: 8889
        - containerPort: 8890
        - containerPort: 6006
        resources: {}
        command:
        - /bin/bash
        - -c
        - cd /opt/antinex/core/docker/jupyter &&
          export HOME=/opt/antinex/core/docker/jupyter &&
          . /opt/venv/bin/activate &&
          source /opt/antinex/api/envs/k8.env &&
          pip install notebook==5.6.0 &&
          /opt/antinex/core/docker/jupyter/start-container.sh &&
          tail -f /var/log/antinex/jupyter/jupyter.log
        env:
        - name: ANTINEX_USER
          valueFrom:
            secretKeyRef:
              name: jupyter.api.user
              key: username
        - name: ANTINEX_PASSWORD
          valueFrom:
            secretKeyRef:
              name: jupyter.api.user
              key: password
        - name: JUPYTER_PASS
          valueFrom:
            secretKeyRef:
              name: jupyter.user
              key: password
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-s3-access
              key: access_key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-s3-access
              key: secret_key
        - name: S3_ADDRESS
          value: minio-service:9000
        - name: S3_REGION_NAME
          value: us-east-1
